# ----------------------------------------------------------------------------------------------------
# Template to add Azure Secure DevOps Scan
# To enable this, you must add Azure DevOps Extension to your Azure DevOps Organization
# See https://marketplace.visualstudio.com/items?itemName=ms-securitydevops.microsoft-security-devops-azdevops
# ----------------------------------------------------------------------------------------------------
parameters:
- name: variableGroupName
  default: 'myVariableGroup'
- name: environmentName
  default: 'DEV'

# ----------------------------------------------------------------------------------------------------
jobs:
- deployment: SecurityScanDeployment
  displayName: Initialize Security Scan Deploy
  environment: ${{ parameters.environmentName }}

- job: SecurityScanJob
  displayName: Security Scan Job
  
  variables:
    - group: ${{ parameters.variableGroupName }}
    - name: environmentName
      value: ${{ parameters.environmentName }}

  steps:
  - bash: |
      echo "environmentName=$(environmentName)"
      echo "runSecurityDevOpScan=$(runSecurityDevOpScan)"
      echo "runPsRuleScan=$(runPsRuleScan)"
    displayName: 'Display Variables'
    continueOnError: true

  # ----------------------------------------------------------------------------------------------------
  # This *should* work, but doesn't...
  # - ${{ if eq(variables.runSecurityDevOpScan, 'true') }}:
  - task: UseDotNet@2
    displayName: 'Use dotnet 3.1'
    inputs:
      version: 3.1.x
      
  - task: UseDotNet@2
    displayName: 'Use dotnet 6.0'
    inputs:
      version: 6.0.x

  - task: MicrosoftSecurityDevOps@1
    condition: eq(variables.runSecurityDevOpScan, 'true')
    displayName: 'Run Microsoft Security DevOps'
    continueOnError: true

  # ----------------------------------------------------------------------------------------------------
  # This *should* work, but doesn't...
  # - ${{ if eq(variables.runPsRuleScan, 'true') }}:
  - task: ps-rule-assert@2
    displayName: Run PSRule Analysis
    condition: eq(variables.runPsRuleScan, 'true')
    inputs:
      modules: 'PSRule.Rules.Azure'
      outputFormat: Sarif
      outputPath: reports/PSRuleOutput.sarif
    continueOnError: true

  - task: PublishBuildArtifacts@1
    displayName: Publish PSRule Results
    condition: eq(variables.runPsRuleScan, 'true')
    inputs:
      pathToPublish: reports/PSRuleOutput.sarif
      artifactName: CodeAnalysisLogs
    continueOnError: true
